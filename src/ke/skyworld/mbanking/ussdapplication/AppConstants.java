package ke.skyworld.mbanking.ussdapplication;

public class AppConstants {

    public final static String strHomeMenuHeader = "Welcome to DESACCO Mobile Banking";
    public final static String strMobileBankingName = "DESACCO";
    public final static String strSACCOName = "Defence SACCO";
    public final static String strContactUs = "Defence SACCO";
    public final static String strSACCOProductName = "DESACCO";
    public final static String strAppID = "BjcPLrMschD";

    public final static String strServiceUnavailable = "Sorry, you are currently unable to access this service. Please visit one of our branches or contact us for assistance.\n\nERR_MBM100\n";

//    public final static String strMBankingUSSDCode = "515";
//    public final static String strMBankingUSSDSubCode = "0";

    public final static String strMBankingUSSDCode = "882";
    public final static String strMBankingUSSDSubCode = "93";

    public final static String strMBankingUSSDCode2 = "882";
    public final static String strMBankingUSSDSubCode2 = "0";
    public final static String strMBankingUSSDSubCode2_1 = "44";

    public final static String strBuyGoodsUSSDCode = "882";
    public final static String strBuyGoodsUSSDSubCode = "18";

    public final static String strGeneralMenusUSSDCode = "515";
    public final static String strErroneousUSSDSubCode = "1";

    public final static String strLiveCollectionAccount = "VEND0061";
    public final static String strExitCollectionAccount = "VEND0058";

    public final static String strSettingParamName = "ORGANIZATION_MBANKING_SETTINGS";
    public final static String strPINResetCode = "55";

    public enum SPProviderCode {
        SAFARICOM(101),
        AIRTEL(102),
        Cooperative_Bank(201),
        KCB(202),
        Equity_Bank(203),
        Standard_Chartered_Bank(204),
        Barclays_Bank(205);
        //Postbank(206);
        private final int intValue;

        SPProviderCode(int theValue) {
            this.intValue = theValue;
        }

        public int getValue() {
            return intValue;
        }
    }

    public enum SPProviderAccountCode {
        //SAFARICOM
        SAFARICOM_B2C("10101"),
        SAFARICOM_C2B("10102"),
        SAFARICOM_B2B("10103"),
        KPLC_TOKEN("10104"),
        KPLC_Postpaid("10105"),
        Nairobi_Water("10106"),
        DStv("10107"),
        ZUKU("10108"),
        GOtv("10109"),
        StarTimes("10110");

        private final String strValue;

        SPProviderAccountCode(String theValue) {
            this.strValue = theValue;
        }

        public String getValue() {
            return strValue;
        }
    }

    public enum USSDDiplayText {
        EXIT("Thank you for using our services.");

        private final String strValue;

        USSDDiplayText(String theValue) {
            this.strValue = theValue;
        }

        public String getValue() {
            return strValue;
        }
    }

    public enum USSDProvider {
        SAFARICOM(101),
        AIRTEL(102),
        TELKOM(103),
        YU(104),
        EQUITEL(105),
        INTERNATIONAL_GATEWAY(201);

        private final int intValue;

        USSDProvider(int theValue) {
            this.intValue = theValue;
        }

        public int getValue() {
            return intValue;
        }
    }

    public enum USSDDataType {
        INIT("INIT(INIT)"),
        // -- For Future reference if OUT_MAIN_MENU Menus is required
        //OUT_MAIN_MENU
        MAIN_OUT_MENU(USSDDataType.INIT.getValue() + "-MAIN_OUT(MENU)"),
        //LOGIN_PIN(USSDDataType.MAIN_OUT_MENU.getValue() + "-LOGIN(PIN)"), //MAIN_OUT_MENU NOT USED therefore Menu Starts at Login

        LOGIN_PIN(USSDDataType.INIT.getValue() + "-LOGIN(PIN)"),

        //GENERAL_MENU
        GENERAL_MENU(USSDDataType.INIT.getValue() + "-GENERAL(MENU)"),

//        Erroneous

        ERRONEOUS_MENU(USSDDataType.INIT.getValue() + "-ERRONEOUS(MENU)"),
        ERRONEOUS_TRANSACTION(USSDDataType.ERRONEOUS_MENU.getValue() + "-ERRONEOUS(TRANSACTION)"),
        ERRONEOUS_ACCOUNT(USSDDataType.ERRONEOUS_TRANSACTION.getValue() + "-ERRONEOUS(ACCOUNT)"),
        ERRONEOUS_CONFIRMATION(USSDDataType.ERRONEOUS_ACCOUNT.getValue() + "-ERRONEOUS(CONFIRMATION)"),
        ERRONEOUS_END(USSDDataType.ERRONEOUS_CONFIRMATION.getValue() + "-ERRONEOUS(END)"),

        RESET_PIN(USSDDataType.INIT.getValue() + "-RESET_PIN(MENU)"),
        RESET_PIN_SERVICE_NO(USSDDataType.RESET_PIN.getValue() + "-RESET_PIN(SERVICE_NO)"),
        RESET_PIN_KYC_NATIONAL_ID(USSDDataType.RESET_PIN_SERVICE_NO.getValue() + "-RESET_PIN(ID_NO)"),
        RESET_PIN_STK_PUSH(USSDDataType.RESET_PIN_KYC_NATIONAL_ID.getValue() + "-RESET_PIN(STK_PUSH)"),
        RESET_PIN_END(USSDDataType.RESET_PIN_KYC_NATIONAL_ID.getValue() + "-RESET_PIN(END)"),

        BUY_GOODS_MENU(USSDDataType.INIT.getValue() + "-BUY_GOODS(MENU)"),
        BUY_GOODS_ACCOUNT(USSDDataType.BUY_GOODS_MENU.getValue() + "-BUY_GOODS(ACCOUNT)"),
        BUY_GOODS_AMOUNT(USSDDataType.BUY_GOODS_ACCOUNT.getValue() + "-BUY_GOODS(AMOUNT)"),
        BUY_GOODS_CONFIRMATION(USSDDataType.BUY_GOODS_AMOUNT.getValue() + "-BUY_GOODS(CONFIRMATION)"),
        BUY_GOODS_END(USSDDataType.BUY_GOODS_CONFIRMATION.getValue() + "-BUY_GOODS(END)"),

        //MAIN_IN_MENU
        MAIN_IN_MENU(USSDDataType.LOGIN_PIN.getValue() + "-MAIN_IN(MENU)"),
        //WITHDRAWAL
        WITHDRAWAL_MENU(USSDDataType.MAIN_IN_MENU.getValue() + "-WITHDRAWAL(MENU)"),
        WITHDRAWAL_OPTION(USSDDataType.WITHDRAWAL_MENU.getValue() + "-WITHDRAWAL(OPTION)"),
        WITHDRAWAL_TO_OPTION(USSDDataType.WITHDRAWAL_MENU.getValue() + "-WITHDRAWAL(TO_OPTION)"),
        WITHDRAWAL_TO(USSDDataType.WITHDRAWAL_OPTION.getValue() + "-WITHDRAWAL(TO)"),
        WITHDRAWAL_ACCOUNT(USSDDataType.WITHDRAWAL_TO.getValue() + "-WITHDRAWAL(ACCOUNT)"),
        WITHDRAWAL_AMOUNT(USSDDataType.WITHDRAWAL_ACCOUNT.getValue() + "-WITHDRAWAL(AMOUNT)"),
        WITHDRAWAL_PIN(USSDDataType.WITHDRAWAL_AMOUNT.getValue() + "-WITHDRAWAL(PIN)"),
        WITHDRAWAL_CONFIRMATION(USSDDataType.WITHDRAWAL_PIN.getValue() + "-WITHDRAWAL(CONFIRMATION)"),
        WITHDRAWAL_END(USSDDataType.WITHDRAWAL_CONFIRMATION.getValue() + "-WITHDRAWAL(END)"),

        //CASH_WITHDRAWAL_MAINTENANCE_ACCOUNT
        CASH_WITHDRAWAL_MAINTENANCE_ACCOUNT_MENU(USSDDataType.WITHDRAWAL_MENU.getValue() + "-CASH_WITHDRAWAL_MAINTENANCE_ACCOUNT(MENU)"),
        CASH_WITHDRAWAL_MAINTENANCE_ACCOUNT_ACCOUNT(USSDDataType.CASH_WITHDRAWAL_MAINTENANCE_ACCOUNT_MENU.getValue() + "-CASH_WITHDRAWAL_MAINTENANCE_ACCOUNT(ACCOUNT)"),
        CASH_WITHDRAWAL_MAINTENANCE_ACCOUNT_NAME(USSDDataType.CASH_WITHDRAWAL_MAINTENANCE_ACCOUNT_ACCOUNT.getValue() + "-CASH_WITHDRAWAL_MAINTENANCE_ACCOUNT(NAME)"),
        CASH_WITHDRAWAL_MAINTENANCE_ACCOUNT_REMOVE(USSDDataType.CASH_WITHDRAWAL_MAINTENANCE_ACCOUNT_NAME.getValue() + "-CASH_WITHDRAWAL_MAINTENANCE_ACCOUNT(REMOVE)"),

        //CASH_WITHDRAWAL_ACTIVATION
        CASH_WITHDRAWAL_ACTIVATION_PIN(USSDDataType.WITHDRAWAL_ACCOUNT.getValue() + "-CASH_WITHDRAWAL_ACTIVATION(PIN)"),
        CASH_WITHDRAWAL_ACTIVATION_CONFIRMATION(USSDDataType.CASH_WITHDRAWAL_ACTIVATION_PIN.getValue() + "-CASH_WITHDRAWAL_ACTIVATION(CONFIRMATION)"),
        CASH_WITHDRAWAL_ACTIVATION_END(USSDDataType.CASH_WITHDRAWAL_ACTIVATION_CONFIRMATION.getValue() + "-CASH_WITHDRAWAL_ACTIVATION(END)"),

        AGENT_WITHDRAWAL_AGENT_NO(USSDDataType.WITHDRAWAL_OPTION.getValue() + "-AGENT_WITHDRAWAL(AGENT_NO)"),
        AGENT_WITHDRAWAL_ACCOUNT(USSDDataType.AGENT_WITHDRAWAL_AGENT_NO.getValue() + "-AGENT_WITHDRAWAL(ACCOUNT)"),
        AGENT_WITHDRAWAL_AMOUNT(USSDDataType.AGENT_WITHDRAWAL_ACCOUNT.getValue() + "-AGENT_WITHDRAWAL(AMOUNT)"),
        AGENT_WITHDRAWAL_PIN(USSDDataType.AGENT_WITHDRAWAL_AMOUNT.getValue() + "-AGENT_WITHDRAWAL(PIN)"),
        AGENT_WITHDRAWAL_CONFIRMATION(USSDDataType.AGENT_WITHDRAWAL_PIN.getValue() + "-AGENT_WITHDRAWAL(CONFIRMATION)"),
        AGENT_WITHDRAWAL_END(USSDDataType.AGENT_WITHDRAWAL_CONFIRMATION.getValue() + "-AGENT_WITHDRAWAL(END)"),

        //UTILITIES
        UTILITIES_MENU(USSDDataType.MAIN_IN_MENU.getValue() + "-UTILITIES(MENU)"),

        //ETOPUP(Airtime etc.)
        ETOPUP_ACCOUNT(USSDDataType.UTILITIES_MENU.getValue() + "-ETOPUP(ACCOUNT)"),
        ETOPUP_TO_OPTION(USSDDataType.ETOPUP_ACCOUNT.getValue() + "-ETOPUP(TO_OPTION)"),
        ETOPUP_TO(USSDDataType.ETOPUP_TO_OPTION.getValue() + "-ETOPUP(TO)"),
        ETOPUP_AMOUNT(USSDDataType.ETOPUP_ACCOUNT.getValue() + "-ETOPUP(AMOUNT)"),
        ETOPUP_PIN(USSDDataType.ETOPUP_AMOUNT.getValue() + "-ETOPUP(PIN)"),
        ETOPUP_CONFIRMATION(USSDDataType.ETOPUP_PIN.getValue() + "-ETOPUP(CONFIRMATION)"),
        ETOPUP_END(USSDDataType.ETOPUP_CONFIRMATION.getValue() + "-ETOPUP(END)"),

        //BILL (KPLC, NAIROBI WATER, DSTV etc.)
        PAY_BILL_BILLER_ACCOUNT(USSDDataType.UTILITIES_MENU.getValue() + "-PAY_BILL(BILLER_ACCOUNT)"),
        PAY_BILL_FROM_ACCOUNT(USSDDataType.PAY_BILL_BILLER_ACCOUNT.getValue() + "-PAY_BILL(FROM_ACCOUNT)"),
        PAY_BILL_AMOUNT(USSDDataType.PAY_BILL_FROM_ACCOUNT.getValue() + "-PAY_BILL(AMOUNT)"),
        PAY_BILL_PIN(USSDDataType.PAY_BILL_AMOUNT.getValue() + "-PAY_BILL(PIN)"),
        PAY_BILL_CONFIRMATION(USSDDataType.PAY_BILL_PIN.getValue() + "-PAY_BILL(CONFIRMATION)"),
        PAY_BILL_END(USSDDataType.PAY_BILL_CONFIRMATION.getValue() + "-PAY_BILL(END)"),

        //PAY_BILL_MAINTENANCE_ACCOUNT
        PAY_BILL_MAINTENANCE_ACCOUNT_MENU(USSDDataType.UTILITIES_MENU.getValue() + "-PAY_BILL_MAINTENANCE_ACCOUNT(MENU)"),
        PAY_BILL_MAINTENANCE_ACCOUNT_ACCOUNT(USSDDataType.PAY_BILL_MAINTENANCE_ACCOUNT_MENU.getValue() + "-PAY_BILL_MAINTENANCE_ACCOUNT(ACCOUNT)"),
        PAY_BILL_MAINTENANCE_ACCOUNT_NAME(USSDDataType.PAY_BILL_MAINTENANCE_ACCOUNT_ACCOUNT.getValue() + "-PAY_BILL_MAINTENANCE_ACCOUNT(NAME)"),
        PAY_BILL_MAINTENANCE_ACCOUNT_REMOVE(USSDDataType.PAY_BILL_MAINTENANCE_ACCOUNT_MENU.getValue() + "-PAY_BILL_MAINTENANCE_ACCOUNT(REMOVE)"),

        //DEPOSIT
        DEPOSIT_MENU(USSDDataType.MAIN_IN_MENU.getValue() + "-DEPOSIT(MENU)"),
        DEPOSIT_OPTION(USSDDataType.DEPOSIT_MENU.getValue() + "-DEPOSIT(OPTION)"),
        DEPOSIT_CATEGORY(USSDDataType.DEPOSIT_OPTION.getValue() + "-DEPOSIT(CATEGORY)"),
        DEPOSIT_ACCOUNT(USSDDataType.DEPOSIT_CATEGORY.getValue() + "-DEPOSIT(ACCOUNT)"),
        DEPOSIT_AMOUNT(USSDDataType.DEPOSIT_ACCOUNT.getValue() + "-DEPOSIT(AMOUNT)"),
        DEPOSIT_PIN(USSDDataType.DEPOSIT_AMOUNT.getValue() + "-DEPOSIT(PIN)"),
        DEPOSIT_CONFIRMATION(USSDDataType.DEPOSIT_PIN.getValue() + "-DEPOSIT(CONFIRMATION)"),
        DEPOSIT_END(USSDDataType.DEPOSIT_CONFIRMATION.getValue() + "-DEPOSIT(END)"),

        /*
        //DEPOSIT
        DEPOSIT_MENU(USSDDataType.MAIN_IN_MENU.getValue() + "-DEPOSIT(MENU)"),
            DEPOSIT_ACCOUNT(USSDDataType.DEPOSIT_MENU.getValue() + "-DEPOSIT(ACCOUNT)"),
                DEPOSIT_AMOUNT(USSDDataType.DEPOSIT_ACCOUNT.getValue() + "-DEPOSIT(AMOUNT)"),
                    DEPOSIT_PIN(USSDDataType.DEPOSIT_AMOUNT.getValue() + "-DEPOSIT(PIN)"),
                        DEPOSIT_CONFIRMATION(USSDDataType.DEPOSIT_PIN.getValue() + "-DEPOSIT(CONFIRMATION)"),
                            DEPOSIT_END(USSDDataType.DEPOSIT_CONFIRMATION.getValue() + "-DEPOSIT(END)"),
         */
        //MY ACCOUNT
        MY_ACCOUNT_MENU(USSDDataType.MAIN_IN_MENU.getValue() + "-MY_ACCOUNT(MENU)"),

        //GENERAL
		/*
		MY_ACCOUNT_ACCOUNT(USSDDataType.MY_ACCOUNT_MENU.getValue() + "-MY_ACCOUNT(ACCOUNT)"),
			MY_ACCOUNT_PIN(USSDDataType.MY_ACCOUNT_ACCOUNT.getValue() + "-MY_ACCOUNT(PIN)"),
				MY_ACCOUNT_END(USSDDataType.MY_ACCOUNT_PIN.getValue() + "-MY_ACCOUNT(END)"),
		*/

        //ACCOUNT STATUS
        ACCOUNT_STATUS_MENU(USSDDataType.MY_ACCOUNT_MENU.getValue() + "-ACCOUNT_STATUS(MENU)"),
        ACCOUNT_STATUS_PIN(USSDDataType.ACCOUNT_STATUS_MENU.getValue() + "-ACCOUNT_STATUS(PIN)"),
        ACCOUNT_STATUS_CONFIRMATION(USSDDataType.ACCOUNT_STATUS_PIN.getValue() + "-ACCOUNT_STATUS(CONFIRMATION)"),
        ACCOUNT_STATUS_END(USSDDataType.ACCOUNT_STATUS_CONFIRMATION.getValue() + "-ACCOUNT_STATUS(END)"),

        //BALANCE
        MY_ACCOUNT_BALANCE_ACCOUNT_TYPE(USSDDataType.MY_ACCOUNT_MENU.getValue() + "-MY_ACCOUNT_BALANCE(ACCOUNT_TYPE)"),//For type: FOSA / BOSA / ALL
        MY_ACCOUNT_BALANCE_ACCOUNT_CATEGORY(USSDDataType.MY_ACCOUNT_BALANCE_ACCOUNT_TYPE.getValue() + "-MY_ACCOUNT_BALANCE(ACCOUNT_CATEGORY)"),//For FOSA / BOSA Accounts
        MY_ACCOUNT_BALANCE_ACCOUNT(USSDDataType.MY_ACCOUNT_BALANCE_ACCOUNT_CATEGORY.getValue() + "-MY_ACCOUNT_BALANCE(ACCOUNT)"),//For Specific group account
        MY_ACCOUNT_BALANCE_PIN(USSDDataType.MY_ACCOUNT_BALANCE_ACCOUNT.getValue() + "-MY_ACCOUNT_BALANCE(PIN)"),
        MY_ACCOUNT_BALANCE_END(USSDDataType.MY_ACCOUNT_BALANCE_PIN.getValue() + "-MY_ACCOUNT_BALANCE(END)"),

        //MINI STATEMENT
        MY_ACCOUNT_MINI_STATEMENT_ACCOUNT_TYPE(USSDDataType.MY_ACCOUNT_MENU.getValue() + "-MY_ACCOUNT_MINI_STATEMENT(ACCOUNT_TYPE)"),
        MY_ACCOUNT_MINI_STATEMENT_ACCOUNT_CATEGORY(USSDDataType.MY_ACCOUNT_MINI_STATEMENT_ACCOUNT_TYPE.getValue() + "-MY_ACCOUNT_MINI_STATEMENT(ACCOUNT_CATEGORY)"),//For Personal / Group Accounts
        MY_ACCOUNT_MINI_STATEMENT_ACCOUNT_GROUP(USSDDataType.MY_ACCOUNT_MINI_STATEMENT_ACCOUNT_CATEGORY.getValue() + "-MY_ACCOUNT_MINI_STATEMENT(ACCOUNT_GROUP)"),//For Specific group account
        MY_ACCOUNT_MINI_STATEMENT_ACCOUNT(USSDDataType.MY_ACCOUNT_MINI_STATEMENT_ACCOUNT_GROUP.getValue() + "-MY_ACCOUNT_MINI_STATEMENT(ACCOUNT)"),
        MY_ACCOUNT_MINI_STATEMENT_PIN(USSDDataType.MY_ACCOUNT_MINI_STATEMENT_ACCOUNT.getValue() + "-MY_ACCOUNT_MINI_STATEMENT(PIN)"),
        MY_ACCOUNT_MINI_STATEMENT_END(USSDDataType.MY_ACCOUNT_MINI_STATEMENT_PIN.getValue() + "-MY_ACCOUNT_MINI_STATEMENT(END)"),

        //MAPP_ACTIVATION
        MAPP_ACTIVATION_ACTION(USSDDataType.MY_ACCOUNT_MENU.getValue() + "-MAPP_ACTIVATION(ACTION)"),
        MAPP_ACTIVATION_CONFIRMATION(USSDDataType.MY_ACCOUNT_MENU.getValue() + "-MAPP_ACTIVATION(CONFIRMATION)"),
        MAPP_ACTIVATION_END(USSDDataType.MAPP_ACTIVATION_CONFIRMATION.getValue() + "-MAPP_ACTIVATION(END)"),

        //ATM_CARDS
        ATM_CARD_ACTION(USSDDataType.MY_ACCOUNT_MENU.getValue() + "-ATM_CARD(ACTION)"),
        ATM_CARD_LIST(USSDDataType.ATM_CARD_ACTION.getValue() + "-ATM_CARD(LIST)"),
        ATM_CARD_REASON(USSDDataType.ATM_CARD_LIST.getValue() + "-ATM_CARD(REASON)"),
        ATM_CARD_PIN(USSDDataType.ATM_CARD_REASON.getValue() + "-ATM_CARD(PIN)"),
        ATM_CARD_CONFIRMATION(USSDDataType.ATM_CARD_PIN.getValue() + "-ATM_CARD(CONFIRMATION)"),
        ATM_CARD_END(USSDDataType.ATM_CARD_CONFIRMATION.getValue() + "-ATM_CARD(END)"),


        //DIVIDEND_PAYSLIP
       /* DIVIDEND_PAYSLIP_EMAIL(USSDDataType.MY_ACCOUNT_MENU.getValue() + "-DIVIDEND_PAYSLIP(EMAIL)"),
        DIVIDEND_PAYSLIP_PIN(USSDDataType.DIVIDEND_PAYSLIP_EMAIL.getValue() + "-DIVIDEND_PAYSLIP(PIN)"),
        DIVIDEND_PAYSLIP_CONFIRMATION(USSDDataType.DIVIDEND_PAYSLIP_PIN.getValue() + "-DIVIDEND_PAYSLIP(CONFIRMATION)"),
        DIVIDEND_PAYSLIP_END(USSDDataType.DIVIDEND_PAYSLIP_CONFIRMATION.getValue() + "-DIVIDEND_PAYSLIP(END)"),*/
        DIVIDEND_PAYSLIP_EMAIL_INPUT(USSDDataType.MY_ACCOUNT_MENU.getValue() + "-DIVIDEND_PAYSLIP(EMAIL_INPUT)"),
        DIVIDEND_PAYSLIP_YEAR_INPUT(USSDDataType.DIVIDEND_PAYSLIP_EMAIL_INPUT.getValue() + "-DIVIDEND_PAYSLIP(YEAR_INPUT)"),
        DIVIDEND_PAYSLIP_PIN(USSDDataType.DIVIDEND_PAYSLIP_EMAIL_INPUT.getValue() + "-DIVIDEND_PAYSLIP(PIN)"),
        DIVIDEND_PAYSLIP_CONFIRMATION(USSDDataType.DIVIDEND_PAYSLIP_PIN.getValue() + "-DIVIDEND_PAYSLIP(CONFIRMATION)"),
        DIVIDEND_PAYSLIP_END(USSDDataType.DIVIDEND_PAYSLIP_CONFIRMATION.getValue() + "-DIVIDEND_PAYSLIP(END)"),


        //UPDATE_EMAIL
        UPDATE_EMAIL_INPUT(USSDDataType.MY_ACCOUNT_MENU.getValue() + "-UPDATE_EMAIL(INPUT)"),
        UPDATE_EMAIL_PIN(USSDDataType.UPDATE_EMAIL_INPUT.getValue() + "-UPDATE_EMAIL(PIN)"),
        UPDATE_EMAIL_CONFIRMATION(USSDDataType.UPDATE_EMAIL_PIN.getValue() + "-UPDATE_EMAIL(CONFIRMATION)"),
        UPDATE_EMAIL_END(USSDDataType.UPDATE_EMAIL_CONFIRMATION.getValue() + "-UPDATE_EMAIL(END)"),

        //UPDATE_EMAIL
        CHECK_BENEFICIARIES_MODE(USSDDataType.MY_ACCOUNT_MENU.getValue() + "-CHECK_BENEFICIARIES(MODE)"),
        CHECK_BENEFICIARIES_EMAIL(USSDDataType.CHECK_BENEFICIARIES_MODE.getValue() + "-CHECK_BENEFICIARIES(EMAIL)"),
        CHECK_BENEFICIARIES_PIN(USSDDataType.CHECK_BENEFICIARIES_EMAIL.getValue() + "-CHECK_BENEFICIARIES(PIN)"),
        CHECK_BENEFICIARIES_CONFIRMATION(USSDDataType.CHECK_BENEFICIARIES_PIN.getValue() + "-CHECK_BENEFICIARIES(CONFIRMATION)"),
        CHECK_BENEFICIARIES_END(USSDDataType.CHECK_BENEFICIARIES_CONFIRMATION.getValue() + "-CHECK_BENEFICIARIES(END)"),

        //SYSTEM REPORTS
        SYSTEM_REPORTS_TYPE(USSDDataType.MY_ACCOUNT_MENU.getValue() + "-SYSTEM_REPORTS(TYPE)"),
        SYSTEM_REPORTS_PIN(USSDDataType.SYSTEM_REPORTS_TYPE.getValue() + "-SYSTEM_REPORTS(PIN)"),
        SYSTEM_REPORTS_CONFIRMATION(USSDDataType.SYSTEM_REPORTS_PIN.getValue() + "-SYSTEM_REPORTS(CONFIRMATION)"),
        SYSTEM_REPORTS_END(USSDDataType.SYSTEM_REPORTS_CONFIRMATION.getValue() + "-SYSTEM_REPORTS(END)"),

        //MEMBER_REGISTRATION
        ACCOUNT_REGISTRATION_ACTION(USSDDataType.MY_ACCOUNT_MENU.getValue() + "-ACCOUNT_REGISTRATION(ACTION)"),
        ACCOUNT_REGISTRATION_NAME(USSDDataType.ACCOUNT_REGISTRATION_ACTION.getValue() + "-ACCOUNT_REGISTRATION(NAME)"),
        ACCOUNT_REGISTRATION_MOBILE_NUMBER(USSDDataType.ACCOUNT_REGISTRATION_NAME.getValue() + "-ACCOUNT_REGISTRATION(MOBILE_NUMBER)"),
        ACCOUNT_REGISTRATION_NATIONAL_ID_NUMBER(USSDDataType.ACCOUNT_REGISTRATION_MOBILE_NUMBER.getValue() + "-ACCOUNT_REGISTRATION(NATIONAL_ID_NUMBER)"),
        ACCOUNT_REGISTRATION_DATE_OF_BIRTH(USSDDataType.ACCOUNT_REGISTRATION_NATIONAL_ID_NUMBER.getValue() + "-ACCOUNT_REGISTRATION(DATE_OF_BIRTH)"),
        ACCOUNT_REGISTRATION_PIN(USSDDataType.ACCOUNT_REGISTRATION_DATE_OF_BIRTH.getValue() + "-ACCOUNT_REGISTRATION(PIN)"),
        ACCOUNT_REGISTRATION_CONFIRMATION(USSDDataType.ACCOUNT_REGISTRATION_PIN.getValue() + "-ACCOUNT_REGISTRATION(CONFIRMATION)"),
        ACCOUNT_REGISTRATION_END(USSDDataType.ACCOUNT_REGISTRATION_CONFIRMATION.getValue() + "-ACCOUNT_REGISTRATION(END)"),

        //SELF_REGISTRATION
        SELF_REGISTRATION_ACTION(USSDDataType.INIT.getValue() + "-SELF_REGISTRATION(ACTION)"),
        SELF_REGISTRATION_NAME(USSDDataType.SELF_REGISTRATION_ACTION.getValue() + "-SELF_REGISTRATION(NAME)"),
        SELF_REGISTRATION_NATIONAL_ID_NUMBER(USSDDataType.SELF_REGISTRATION_NAME.getValue() + "-SELF_REGISTRATION(NATIONAL_ID_NUMBER)"),
        SELF_REGISTRATION_DATE_OF_BIRTH(USSDDataType.SELF_REGISTRATION_NATIONAL_ID_NUMBER.getValue() + "-SELF_REGISTRATION(DATE_OF_BIRTH)"),
        SELF_REGISTRATION_CONFIRMATION(USSDDataType.SELF_REGISTRATION_DATE_OF_BIRTH.getValue() + "-SELF_REGISTRATION(CONFIRMATION)"),
        SELF_REGISTRATION_END(USSDDataType.SELF_REGISTRATION_CONFIRMATION.getValue() + "-SELF_REGISTRATION(END)"),

        //LOAN
        LOAN_MENU(USSDDataType.MAIN_IN_MENU.getValue() + "-LOAN(MENU)"),
        LOAN_QUALIFICATION_ACCOUNT(USSDDataType.LOAN_MENU.getValue() + "-LOAN_QUALIFICATION(ACCOUNT)"),
        LOAN_QUALIFICATION_CATEGORY(USSDDataType.LOAN_QUALIFICATION_ACCOUNT.getValue() + "-LOAN_QUALIFICATION(CATEGORY)"),
        LOAN_QUALIFICATION_TYPE(USSDDataType.LOAN_QUALIFICATION_CATEGORY.getValue() + "-LOAN_QUALIFICATION(TYPE)"),
        LOAN_QUALIFICATION_END(USSDDataType.LOAN_QUALIFICATION_TYPE.getValue() + "-LOAN_QUALIFICATION(END)"),

        LOAN_APPLICATION_CATEGORY(USSDDataType.LOAN_MENU.getValue() + "-LOAN_APPLICATION(CATEGORY)"),
        LOAN_APPLICATION_ACCOUNT(USSDDataType.LOAN_APPLICATION_CATEGORY.getValue() + "-LOAN_APPLICATION(ACCOUNT)"),
        LOAN_APPLICATION_TYPE(USSDDataType.LOAN_APPLICATION_ACCOUNT.getValue() + "-LOAN_APPLICATION(TYPE)"),
        LOAN_APPLICATION_TNCS(USSDDataType.LOAN_APPLICATION_TYPE.getValue() + "-LOAN_APPLICATION(TNCS)"),
        LOAN_APPLICATION_INSTALLMENTS(USSDDataType.LOAN_APPLICATION_TNCS.getValue() + "-LOAN_APPLICATION(INSTALLMENTS)"),
        LOAN_APPLICATION_AMOUNT(USSDDataType.LOAN_APPLICATION_INSTALLMENTS.getValue() + "-LOAN_APPLICATION(AMOUNT)"),
        LOAN_APPLICATION_PURPOSE(USSDDataType.LOAN_APPLICATION_AMOUNT.getValue() + "-LOAN_APPLICATION(PURPOSE)"),
        LOAN_APPLICATION_BRANCH(USSDDataType.LOAN_APPLICATION_PURPOSE.getValue() + "-LOAN_APPLICATION(BRANCH)"),
        LOAN_APPLICATION_PAYSLIP_PASSWORD(USSDDataType.LOAN_APPLICATION_BRANCH.getValue() + "-LOAN_APPLICATION(PAYSLIP_PASSWORD)"),
        LOAN_APPLICATION_PIN(USSDDataType.LOAN_APPLICATION_PAYSLIP_PASSWORD.getValue() + "-LOAN_APPLICATION(PIN)"),
        LOAN_APPLICATION_CONFIRMATION(USSDDataType.LOAN_APPLICATION_PIN.getValue() + "-LOAN_APPLICATION(CONFIRMATION)"),
        LOAN_APPLICATION_END(USSDDataType.LOAN_APPLICATION_CONFIRMATION.getValue() + "-LOAN_APPLICATION(END)"),


        M_BOOSTA_LOAN_APPLICATION_AMOUNT(USSDDataType.LOAN_MENU.getValue() + "-M_BOOSTA_LOAN_APPLICATION(AMOUNT)"),
        M_BOOSTA_LOAN_APPLICATION_PURPOSE(USSDDataType.M_BOOSTA_LOAN_APPLICATION_AMOUNT.getValue() + "-M_BOOSTA_LOAN_APPLICATION(PURPOSE)"),
        M_BOOSTA_LOAN_APPLICATION_PIN(USSDDataType.M_BOOSTA_LOAN_APPLICATION_PURPOSE.getValue() + "-M_BOOSTA_LOAN_APPLICATION(PIN)"),
        M_BOOSTA_LOAN_APPLICATION_CONFIRMATION(USSDDataType.M_BOOSTA_LOAN_APPLICATION_PIN.getValue() + "-M_BOOSTA_LOAN_APPLICATION(CONFIRMATION)"),
        M_BOOSTA_LOAN_APPLICATION_END(USSDDataType.M_BOOSTA_LOAN_APPLICATION_CONFIRMATION.getValue() + "-M_BOOSTA_LOAN_APPLICATION(END)"),


        LOAN_REPAYMENT_ACCOUNT(USSDDataType.LOAN_MENU.getValue() + "-LOAN_REPAYMENT(ACCOUNT)"),
        LOAN_REPAYMENT_OPTION(USSDDataType.LOAN_REPAYMENT_ACCOUNT.getValue() + "-LOAN_REPAYMENT(OPTION)"),
        LOAN_REPAYMENT_CATEGORY(USSDDataType.LOAN_REPAYMENT_OPTION.getValue() + "-LOAN_REPAYMENT(CATEGORY)"),//For Personal / Group Loans
        LOAN_REPAYMENT_GROUP(USSDDataType.LOAN_REPAYMENT_CATEGORY.getValue() + "-LOAN_REPAYMENT(GROUP)"),//For Specific group loan
        LOAN_REPAYMENT_LOAN(USSDDataType.LOAN_REPAYMENT_GROUP.getValue() + "-LOAN_REPAYMENT(LOAN)"),
        LOAN_REPAYMENT_AMOUNT(USSDDataType.LOAN_REPAYMENT_LOAN.getValue() + "-LOAN_REPAYMENT(AMOUNT)"),
        LOAN_REPAYMENT_PIN(USSDDataType.LOAN_REPAYMENT_AMOUNT.getValue() + "-LOAN_REPAYMENT(PIN)"),
        LOAN_REPAYMENT_CONFIRMATION(USSDDataType.LOAN_REPAYMENT_PIN.getValue() + "-LOAN_REPAYMENT(CONFIRMATION)"),
        LOAN_REPAYMENT_END(USSDDataType.LOAN_REPAYMENT_CONFIRMATION.getValue() + "-LOAN_REPAYMENT(END)"),

        LOAN_GUARANTORS_TYPE(USSDDataType.LOAN_MENU.getValue() + "-LOAN_GUARANTORS(TYPE)"),
        LOAN_GUARANTORS_OPTION(USSDDataType.LOAN_GUARANTORS_TYPE.getValue() + "-LOAN_GUARANTORS(OPTION)"),
        LOAN_GUARANTORS_GUARANTOR(USSDDataType.LOAN_GUARANTORS_OPTION.getValue() + "-LOAN_GUARANTORS(GUARANTOR)"),
        LOAN_GUARANTORS_MOBILE_NUMBER(USSDDataType.LOAN_GUARANTORS_OPTION.getValue() + "-LOAN_GUARANTORS(MOBILE_NUMBER)"),
        LOAN_GUARANTORS_PIN(USSDDataType.LOAN_GUARANTORS_MOBILE_NUMBER.getValue() + "-LOAN_GUARANTORS(PIN)"),
        LOAN_GUARANTORS_CONFIRMATION(USSDDataType.LOAN_GUARANTORS_PIN.getValue() + "-LOAN_GUARANTORS(CONFIRMATION)"),
        LOAN_GUARANTORS_END(USSDDataType.LOAN_GUARANTORS_CONFIRMATION.getValue() + "-LOAN_GUARANTORS(END)"),


        LOANS_GUARANTEED_LOANEE(USSDDataType.LOAN_MENU.getValue() + "-LOANS_GUARANTEED(LOANEE)"),
        LOANS_GUARANTEED_PIN(USSDDataType.LOANS_GUARANTEED_LOANEE.getValue() + "-LOANS_GUARANTEED(PIN)"),
        LOANS_GUARANTEED_END(USSDDataType.LOANS_GUARANTEED_PIN.getValue() + "-LOANS_GUARANTEED(END)"),


        LOAN_ACTION_GUARANTORSHIP_LOANEE(USSDDataType.LOAN_MENU.getValue() + "-LOAN_ACTION_GUARANTORSHIP(LOANEE)"),
        LOAN_ACTION_GUARANTORSHIP_ACTION(USSDDataType.LOAN_ACTION_GUARANTORSHIP_LOANEE.getValue() + "-LOAN_ACTION_GUARANTORSHIP(ACTION)"),
        LOAN_ACTION_GUARANTORSHIP_PIN(USSDDataType.LOAN_ACTION_GUARANTORSHIP_ACTION.getValue() + "-LOAN_ACTION_GUARANTORSHIP(PIN)"),
        LOAN_ACTION_GUARANTORSHIP_CONFIRMATION(USSDDataType.LOAN_ACTION_GUARANTORSHIP_PIN.getValue() + "-LOAN_ACTION_GUARANTORSHIP(CONFIRMATION)"),
        LOAN_ACTION_GUARANTORSHIP_END(USSDDataType.LOAN_ACTION_GUARANTORSHIP_CONFIRMATION.getValue() + "-LOAN_ACTION_GUARANTORSHIP(END)"),


        LOAN_TERMS_AND_CONDITIONS_CATEGORY(USSDDataType.LOAN_MENU.getValue() + "-LOAN_TERMS_AND_CONDITIONS(CATEGORY)"),
        LOAN_TERMS_AND_CONDITIONS_TYPE(USSDDataType.LOAN_TERMS_AND_CONDITIONS_CATEGORY.getValue() + "-LOAN_TERMS_AND_CONDITIONS(TYPE)"),
        LOAN_TERMS_AND_CONDITIONS_DELIVERY(USSDDataType.LOAN_TERMS_AND_CONDITIONS_TYPE.getValue() + "-LOAN_TERMS_AND_CONDITIONS(DELIVERY)"),
        LOAN_TERMS_AND_CONDITIONS_EMAIL(USSDDataType.LOAN_TERMS_AND_CONDITIONS_DELIVERY.getValue() + "-LOAN_TERMS_AND_CONDITIONS(EMAIL)"),
        LOAN_TERMS_AND_CONDITIONS_END(USSDDataType.LOAN_TERMS_AND_CONDITIONS_EMAIL.getValue() + "-LOAN_TERMS_AND_CONDITIONS(END)"),


        //FUNDS TRANSFER
        FUNDS_TRANSFER_MENU(USSDDataType.MAIN_IN_MENU.getValue() + "-FUNDS_TRANSFER(MENU)"),

        //INTERNAL TRANSFER
        FUNDS_TRANSFER_INTERNAL_FROM_ACCOUNT(USSDDataType.FUNDS_TRANSFER_MENU.getValue() + "-FUNDS_TRANSFER_INTERNAL(FROM_ACCOUNT)"),
        FUNDS_TRANSFER_INTERNAL_OPTION(USSDDataType.FUNDS_TRANSFER_INTERNAL_FROM_ACCOUNT.getValue() + "-FUNDS_TRANSFER_INTERNAL(OPTION)"),
        FUNDS_TRANSFER_INTERNAL_TO_OPTION(USSDDataType.FUNDS_TRANSFER_INTERNAL_OPTION.getValue() + "-FUNDS_TRANSFER_INTERNAL(TO_OPTION)"),
        FUNDS_TRANSFER_INTERNAL_TO_ACCOUNT(USSDDataType.FUNDS_TRANSFER_INTERNAL_TO_OPTION.getValue() + "-FUNDS_TRANSFER_INTERNAL(TO_ACCOUNT)"),
        FUNDS_TRANSFER_INTERNAL_AMOUNT(USSDDataType.FUNDS_TRANSFER_INTERNAL_TO_ACCOUNT.getValue() + "-FUNDS_TRANSFER_INTERNAL(AMOUNT)"),
        FUNDS_TRANSFER_INTERNAL_PIN(USSDDataType.FUNDS_TRANSFER_INTERNAL_AMOUNT.getValue() + "-FUNDS_TRANSFER_INTERNAL(PIN)"),
        FUNDS_TRANSFER_INTERNAL_CONFIRMATION(USSDDataType.FUNDS_TRANSFER_INTERNAL_PIN.getValue() + "-FUNDS_TRANSFER_INTERNAL(CONFIRMATION)"),
        FUNDS_TRANSFER_INTERNAL_END(USSDDataType.FUNDS_TRANSFER_INTERNAL_CONFIRMATION.getValue() + "-FUNDS_TRANSFER_INTERNAL(END)"),

        //EXTERNAL TRANSFER
        FUNDS_TRANSFER_EXTERNAL_BANK(USSDDataType.FUNDS_TRANSFER_MENU.getValue() + "-FUNDS_TRANSFER_EXTERNAL(BANK)"),
        FUNDS_TRANSFER_EXTERNAL_TO_BANK_ACCOUNT_NO(USSDDataType.FUNDS_TRANSFER_EXTERNAL_BANK.getValue() + "-FUNDS_TRANSFER_EXTERNAL(TO_BANK_ACCOUNT_NO)"),
        FUNDS_TRANSFER_EXTERNAL_TO_BANK_ACCOUNT_NAME(USSDDataType.FUNDS_TRANSFER_EXTERNAL_TO_BANK_ACCOUNT_NO.getValue() + "-FUNDS_TRANSFER_EXTERNAL(TO_BANK_ACCOUNT_NO)"),
        FUNDS_TRANSFER_EXTERNAL_FROM_ACCOUNT(USSDDataType.FUNDS_TRANSFER_EXTERNAL_TO_BANK_ACCOUNT_NAME.getValue() + "-FUNDS_TRANSFER_EXTERNAL(FROM_ACCOUNT)"),
        FUNDS_TRANSFER_EXTERNAL_AMOUNT(USSDDataType.FUNDS_TRANSFER_EXTERNAL_FROM_ACCOUNT.getValue() + "-FUNDS_TRANSFER_EXTERNAL(AMOUNT)"),
        FUNDS_TRANSFER_EXTERNAL_PIN(USSDDataType.FUNDS_TRANSFER_EXTERNAL_AMOUNT.getValue() + "-FUNDS_TRANSFER_EXTERNAL(PIN)"),
        FUNDS_TRANSFER_EXTERNAL_CONFIRMATION(USSDDataType.FUNDS_TRANSFER_EXTERNAL_PIN.getValue() + "-FUNDS_TRANSFER_EXTERNAL(CONFIRMATION)"),
        FUNDS_TRANSFER_EXTERNAL_END(USSDDataType.FUNDS_TRANSFER_EXTERNAL_CONFIRMATION.getValue() + "-FUNDS_TRANSFER_EXTERNAL(END)"),

        //FUNDS_TRANSFER_EXTERNAL_MAINTENANCE_ACCOUNT
        FUNDS_TRANSFER_EXTERNAL_MAINTENANCE_ACCOUNT_MENU(USSDDataType.FUNDS_TRANSFER_EXTERNAL_BANK.getValue() + "-FUNDS_TRANSFER_EXTERNAL_MAINTENANCE_ACCOUNT(MENU)"),
        FUNDS_TRANSFER_EXTERNAL_MAINTENANCE_ACCOUNT_ACCOUNT(USSDDataType.FUNDS_TRANSFER_EXTERNAL_MAINTENANCE_ACCOUNT_MENU.getValue() + "-FUNDS_TRANSFER_EXTERNAL_MAINTENANCE_ACCOUNT(ACCOUNT)"),
        FUNDS_TRANSFER_EXTERNAL_MAINTENANCE_ACCOUNT_NAME(USSDDataType.FUNDS_TRANSFER_EXTERNAL_MAINTENANCE_ACCOUNT_ACCOUNT.getValue() + "-FUNDS_TRANSFER_EXTERNAL_MAINTENANCE_ACCOUNT(NAME)"),
        FUNDS_TRANSFER_EXTERNAL_MAINTENANCE_ACCOUNT_REMOVE(USSDDataType.FUNDS_TRANSFER_EXTERNAL_MAINTENANCE_ACCOUNT_MENU.getValue() + "-FUNDS_TRANSFER_EXTERNAL_MAINTENANCE_ACCOUNT(REMOVE)"),

        //PAY MOD BILLS
        PAY_MOD_BILLS_MENU(USSDDataType.MAIN_IN_MENU.getValue() + "-PAY_MOD_BILLS(MENU)"),
        PAY_MOD_BILLS_TYPE(USSDDataType.PAY_MOD_BILLS_MENU.getValue() + "-PAY_MOD_BILLS(TYPE)"),
        PAY_MOD_BILLS_BRANCH(USSDDataType.PAY_MOD_BILLS_TYPE.getValue() + "-PAY_MOD_BILLS(BRANCH)"),
        PAY_MOD_BILLS_PAYMENT_OPTION(USSDDataType.PAY_MOD_BILLS_BRANCH.getValue() + "-PAY_MOD_BILLS(PAYMENT_OPTION)"),
        PAY_MOD_BILLS_FROM_ACCOUNT(USSDDataType.PAY_MOD_BILLS_PAYMENT_OPTION.getValue() + "-PAY_MOD_BILLS(FROM_ACCOUNT)"),
        PAY_MOD_BILLS_AMOUNT(USSDDataType.PAY_MOD_BILLS_FROM_ACCOUNT.getValue() + "-PAY_MOD_BILLS(AMOUNT)"),
        PAY_MOD_BILLS_PIN(USSDDataType.PAY_MOD_BILLS_AMOUNT.getValue() + "-PAY_MOD_BILLS(PIN)"),
        PAY_MOD_BILLS_CONFIRMATION(USSDDataType.PAY_MOD_BILLS_PIN.getValue() + "-PAY_MOD_BILLS(CONFIRMATION)"),
        PAY_MOD_BILLS_END(USSDDataType.PAY_MOD_BILLS_CONFIRMATION.getValue() + "-PAY_MOD_BILLS(END)"),

        //ACCOUNT_REGISTRATION_MENU
        //ACCOUNT_REGISTRATION_MENU(USSDDataType.MAIN_IN_MENU.getValue() + "-ACCOUNT_REGISTRATION(MENU)"),
        //BINGWA SACCO TO PROVIDE CLARITY ON SUB MENUS

        //CHANGE_PIN
        CHANGE_PIN_CURRENT_PIN(USSDDataType.MAIN_IN_MENU.getValue() + "-CHANGE_PIN(CURRENT_PIN)"),
        CHANGE_PIN_NEW_PIN(USSDDataType.CHANGE_PIN_CURRENT_PIN.getValue() + "-CHANGE_PIN(NEW_PIN)"),
        CHANGE_PIN_CONFIRM_PIN(USSDDataType.CHANGE_PIN_NEW_PIN.getValue() + "-CHANGE_PIN(CONFIRM_PIN)"),
        CHANGE_PIN_END(USSDDataType.CHANGE_PIN_CONFIRM_PIN.getValue() + "-CHANGE_PIN(END)"),


        //FORGOT PIN
        FORGOT_PIN_ID_NO(USSDDataType.INIT.getValue() + "-FORGOT_PIN(ID_NO)"),
        FORGOT_PIN_DOB(USSDDataType.FORGOT_PIN_ID_NO.getValue() + "-FORGOT_PIN(DOB)"),
        FORGOT_PIN_END(USSDDataType.FORGOT_PIN_DOB.getValue() + "-FORGOT_PIN(END)"),

        TERMS_AND_CONDITIONS(USSDDataType.LOGIN_PIN.getValue() + "-TERMS_AND_CONDITIONS(TC)"),
        TERMS_AND_CONDITIONS_END(USSDDataType.TERMS_AND_CONDITIONS.getValue() + "-TERMS_AND_CONDITIONS(END)"),


        //SET_PIN
        SET_PIN_SERVICE_NO(USSDDataType.LOGIN_PIN.getValue() + "-SET_PIN(SERVICE_NO)"),
        SET_PIN_ID_NO(USSDDataType.SET_PIN_SERVICE_NO.getValue() + "-SET_PIN(ID_NO)"),
        SET_PIN_NEW_PIN(USSDDataType.SET_PIN_ID_NO.getValue() + "-SET_PIN(NEW_PIN)"),
        SET_PIN_CONFIRM_PIN(USSDDataType.SET_PIN_NEW_PIN.getValue() + "-SET_PIN(CONFIRM_PIN)"),
        SET_PIN_TC(USSDDataType.SET_PIN_CONFIRM_PIN.getValue() + "-SET_PIN(TC)"),
        SET_PIN_END(USSDDataType.SET_PIN_TC.getValue() + "-SET_PIN(END)"),

        USSD_PROCESS_OVERIDE_BACK("USSD_PROCESS_OVERIDE(BACK)"),
        USSD_PROCESS_OVERIDE_HOME("USSD_PROCESS_OVERIDE(HOME)"),
        USSD_PROCESS_OVERIDE_ERROR("USSD_PROCESS_OVERIDE(ERROR)"),
        USSD_PROCESS_OVERIDE_DATA_TYPE_NOT_FOUND("USSD_PROCESS_OVERIDE(DATA_TYPE_NOT_FOUND)");

        private final String strValue;

        USSDDataType(String theValue) {
            this.strValue = theValue;
        }

        public String getValue() {
            return strValue;
        }
    }

    public static String[] HONORIFICS = {
            "ADMIRAL",
            "AIR CDRE",
            "AIR MARSHAL",
            "ALDERMAN",
            "AMBASSADOR",
            "ARCHBISHOP",
            "ARCHDEACON",
            "BARON OF LEWES",
            "BARON",
            "BARONESS",
            "BISHOP",
            "BRIGADIER",
            "BROTHER",
            "BUERGERMEISTER",
            "CANON",
            "CAPTAIN",
            "CATHOLIC CHAPLAIN",
            "CHAIRMAN",
            "CHEVALIER",
            "CHIEF CONSTABLE",
            "CHIEF FIRE OFFICER",
            "CHIEF INSPECTOR",
            "CHIEF RABBI SIR",
            "CHIEF SUPT",
            "CHIEF",
            "COLONEL DR",
            "COLONEL",
            "COMMANDER",
            "COMMODORE",
            "COMTE",
            "CONSORT TO THE DEPUTY MAYOR OF WIRRAL",
            "CONSUL",
            "COUNCILLOR MRS",
            "COUNCILLOR",
            "COUNT",
            "COUNTESS",
            "DAME",
            "DATO'",
            "DATUK",
            "DEAN",
            "DEPUTY MAYOR OF SEFTON COUNCILLOR",
            "DEPUTY VICE-CHANCELLOR PROFESSOR",
            "DISTRICT ATTORNEY",
            "DISTRICT JUDGE",
            "DOCTOR",
            "DOTT.",
            "DR",
            "DUCHESS",
            "DUKE",
            "EARL",
            "EMERITUS PROFESSOR",
            "ENG",
            "EUR ING",
            "FATHER",
            "FIONA",
            "FLT LT",
            "FRAU",
            "FRÚ",
            "GENERAL",
            "GOVERNOR",
            "GROUP CAPTAIN",
            "HER EXCELLENCY",
            "HER HONOUR JUDGE",
            "HER HONOUR",
            "HER ROYAL HIGHNESS PRINCESS",
            "HER ROYAL HIGHNESS",
            "HERR",
            "HIGH SHERIFF OF MERSEYSIDE",
            "HIS EXCELLENCY CHIEF",
            "HIS EXCELLENCY",
            "HIS GRACE THE DUKE OF WESTMINSTER",
            "HIS GRACE THE DUKE",
            "HIS GRACE",
            "HIS HONOUR JUDGE",
            "HIS HONOUR",
            "HIS ROYAL HIGHNESS PRINCE",
            "HIS ROYAL HIGHNESS",
            "HON. LORD",
            "HON",
            "HONOURABLE",
            "HRH PRINCESS",
            "ING",
            "JUDGE",
            "JUSTICE",
            "LADY MAYORESS",
            "LADY",
            "LIEUTENANT COLONEL",
            "LIEUTENANT COMMANDER",
            "LIEUTENANT",
            "LORD LIEUTENANT OF MERSEYSIDE DAME",
            "LORD LIEUTENANT OF MERSEYSIDE DR",
            "LORD LIEUTENANT",
            "LORD MAYOR",
            "LORD",
            "LT CDR",
            "LT COLONEL",
            "MADAM",
            "MADEMOISELLE",
            "MAJOR",
            "MAJORS",
            "MAR",
            "MARCHIONESS",
            "MASTER",
            "MAYOR",
            "MAYORESS",
            "MESSRS",
            "METHODIST CHAPLAIN",
            "MISS",
            "MME",
            "MONSIEUR",
            "MONSIGNOR",
            "MR AND MRS",
            "MR JUSTICE",
            "MR",
            "MRS",
            "MS",
            "MX",
            "OF BIRKENHEAD",
            "OF QUARRY BANK",
            "PASTOR",
            "POLICE CONSTABLE",
            "PR ENG",
            "PREBENDARY",
            "PRESIDENT",
            "PRINCE",
            "PRINCESS",
            "PRO-VICE-CHANCELLOR PROFESSOR",
            "PRO-VICE-CHANCELLOR",
            "PROF",
            "PROFESSOR DAME",
            "PROFESSOR LORD",
            "PROFESSOR SIR",
            "PROFESSOR THE LORD",
            "PROFESSOR",
            "QPM",
            "RABBI",
            "REVD. CANNON DR.",
            "REVEREND BROTHER",
            "REVEREND CANON",
            "REVEREND DR",
            "REVEREND FATHER",
            "REVEREND PROFESSOR",
            "REVEREND SISTER",
            "REVEREND",
            "RIGHT REVEREND",
            "RT HON",
            "RT. HON. DAME",
            "RT. HON. LORD JUSTICE",
            "RT. HON. SIR",
            "SENATOR",
            "SENIOR EXECUTIVE ASSISTANT",
            "SERGENT",
            "SHEIKH",
            "SIR",
            "SISTER",
            "SQUADRON LEADER",
            "SUB LT",
            "THE COUNTESS OF",
            "THE DUKE OF",
            "THE EARL OF",
            "THE EDITOR",
            "THE HIGH SHERIFF OF MERSEYSIDE DR.",
            "THE HIGH SHERIFF",
            "THE HON DAME",
            "THE HON. DR.",
            "THE HON. MR. JUSTICE",
            "THE HON. MR",
            "THE HONORABLE DAME",
            "THE HONORABLE MRS",
            "THE HONORABLE SIR",
            "THE HONORABLE",
            "THE LORD",
            "THE MAYOR-ELEC OF WIRRAL COUNCILLOR",
            "THE MAYOR",
            "THE MOST REV",
            "THE RIGHT HON. LORD JUSTICE",
            "THE RIGHT HON. THE LORD",
            "THE RIGHT HONOURABLE",
            "THE RT HON LADY JUSTICE",
            "THE RT HON LORD",
            "THE RT HON MRS",
            "THE RT HON THE LADY",
            "THE RT HON THE LORD",
            "THE RT HON",
            "THE RT HONOURABLE EARL OF",
            "THE RT REV BISHOP",
            "THE RT REV DR",
            "THE RT REV",
            "THE RT. HON THE LORD",
            "THE RT. HON. DAME",
            "THE RT. HON. LADY JUSTICE",
            "THE RT. HON. LORD",
            "THE RT. HON. THE BARONESS",
            "THE RT. HON. THE EARL OF",
            "THE RT. HON. THE LADY",
            "THE RT. HON. THE LORD",
            "THE RT. HON.",
            "THE RT. HON",
            "THE RT. REV. DR.",
            "THE RT. REVD. DR.",
            "THE RT. WORSHIPFUL",
            "THE RT. WORSHIPFULL",
            "THE VERY REVD. DR.",
            "THE VERY REVEREND",
            "THE WORSHIP THE MAYOR OF WIRRAL",
            "THE WORSHIP THE MAYOR",
            "THE WORSHIPFUL THE LORD MAYOR OF LIVERPOOL",
            "THE WORSHIPFUL THE LORD MAYOR",
            "THE WORSHIPFUL THE MAYOR OF HALTON",
            "THE WORSHIPFUL THE MAYOR OF KNOWSLEY",
            "THE WORSHIPFUL THE MAYOR OF SEFTON",
            "THE WORSHIPFUL THE MAYOR OF ST. HELENS",
            "THE WORSHIPFUL THE MAYOR OF",
            "THE WORSHIPFUL THE MAYOR",
            "VENERABLE",
            "VERY REVEREND",
            "VICE ADMIRAL SIR",
            "VICE-CHANCELLOR PROFESSOR",
            "VICE-CHANCELLOR",
            "VISCOUNT",
            "VISCOUNTESS",
            "WING COMMANDER"
    };

    public enum ChargeServices{

        MPESA_WITHDRAWAL("MPESA_WITHDRAWAL"),
        AIRTIME_PURCHASE("AIRTIME_PURCHASE"),
        BILL_PAYMENT("BILL_PAYMENT"),
        TILL_PAYMENT("TILL_PAYMENT"),
        BANK_TRANSFER("BANK_TRANSFER"),
        PESALINK("PESALINK"),
        IFT_ACCOUNT_TO_ACCOUNT("IFT_ACCOUNT_TO_ACCOUNT"),
        DEPOSIT("DEPOSIT"),
        SINGLE_ACCOUNT_BALANCE_ENQUIRY("SINGLE_ACCOUNT_BALANCE_ENQUIRY"),
        ACCOUNT_MINI_STATEMENT("ACCOUNT_MINI_STATEMENT"),
        ACCOUNT_FULL_STATEMENT("ACCOUNT_FULL_STATEMENT"),
        LOAN_BALANCE_ENQUIRY("LOAN_BALANCE_ENQUIRY"),
        LOAN_MINI_STATEMENT("LOAN_MINI_STATEMENT"),
        LOAN_FULL_STATEMENT("LOAN_FULL_STATEMENT"),
        LOAN_APPLICATION("LOAN_APPLICATION"),
        DIVIDENDS_CAPITALIZATION("DIVIDENDS_CAPITALIZATION"),
        IFT_LOAN_REPAYMENT("IFT_LOAN_REPAYMENT"),
        CHECK_LOAN_LIMIT("CHECK_LOAN_LIMIT"),
        GUARANTORSHIP_ABILITY_ENQUIRY("GUARANTORSHIP_ABILITY_ENQUIRY");

        private final String strValue;

        ChargeServices(String theValue) {
            this.strValue = theValue;
        }

        public String getValue() {
            return strValue;
        }

    }

    public enum MobileBankingServices {
        BALANCE_ENQUIRY("BALANCE_ENQUIRY"),
        ACCOUNT_STATEMENT("ACCOUNT_STATEMENT"),
        DEPOSIT_VIA_MPESA("DEPOSIT_VIA_MPESA"),
        WITHDRAWAL_VIA_MPESA("WITHDRAWAL_VIA_MPESA"),
        BANK_TRANSFER("BANK_TRANSFER"),
        UTILITY_PAYMENTS("UTILITY_PAYMENTS"),
        BUY_AIRTIME("BUY_AIRTIME"),
        INTERNAL_FUNDS_TRANSFER("INTERNAL_FUNDS_TRANSFER"),
        LOAN_QUALIFICATION("LOAN_QUALIFICATION"),
        LOAN_APPLICATION("LOAN_APPLICATION"),
        LOAN_REPAYMENT("LOAN_REPAYMENT"),
        LOAN_STATEMENT("LOAN_STATEMENT"),
        LOAN_BALANCE("LOAN_BALANCE");

        private final String strValue;

        MobileBankingServices(String theValue) {
            this.strValue = theValue;
        }

        public String getValue() {
            return strValue;
        }

    }

    public enum MobileBankingChannel {
        USSD("USSD"),
        MAPP("MAPP");

        private final String strValue;

        MobileBankingChannel(String theValue) {
            this.strValue = theValue;
        }

        public String getValue() {
            return strValue;
        }

    }

    public enum MobileMandates{
        BALANCE_ENQUIRY("BALANCE_ENQUIRY"),
        ACCOUNT_STATEMENT("ACCOUNT_STATEMENT"),
        DEPOSIT("DEPOSIT"),
        WITHDRAWAL("WITHDRAWAL"),
        INTERNAL_TRANSFER("INTERNAL_TRANSFER"),
        BANK_TRANSFER("BANK_TRANSFER"),
        UTILITY_PAYMENTS("UTILITY_PAYMENTS"),
        BUY_AIRTIME("BUY_AIRTIME"),
        LOAN_QUALIFICATION("LOAN_QUALIFICATION"),
        LOAN_APPLICATION("LOAN_APPLICATION"),
        LOAN_REPAYMENT("LOAN_REPAYMENT"),
        LOAN_STATEMENT("LOAN_STATEMENT"),
        LOAN_BALANCE("LOAN_BALANCE"),
        LOAN_GUARANTORSHIP("LOAN_GUARANTORSHIP"),
        MEMBER_ONBOARDING("MEMBER_ONBOARDING");

        private final String strValue;

        MobileMandates(String theValue) {
            this.strValue = theValue;
        }

        public String getValue() {
            return strValue;
        }

    }


}
